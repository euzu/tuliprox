tcp:
  routers:
    http-proxy:
      entryPoints: [http-proxy]           # :1080
      rule: "HostSNI(`*`)"
      service: gluetun-http-proxy

    https-proxy:
      entryPoints: [https-proxy]          # :9443
      rule: "HostSNI(`proxy.tuliprox.io`)"
      tls:
        certResolver: cloudflare
        options: default
      service: gluetun-http-proxy

    socks5h-tcp:
      entryPoints: [socks5h-tcp]          # :1388
      rule: "HostSNI(`*`)"
      service: socks5h-tcp

    shadowsocks-tcp:
      entryPoints: [shadowsocks-tcp]      # :9388
      rule: "HostSNI(`*`)"
      service: shadowsocks-tcp                      

  services:                         
    gluetun-http-proxy:
      loadBalancer:
        servers:
          - address: "gluetun-01:1080"
          #- address: "gluetun-02:1080"   # optional second gluetun instance, but does not work right now because traefik does not support sticking of TCP connections -> https://traefik.io/glossary/what-are-sticky-sessions
          #- address: "gluetun-03:1080"   # optional third gluetun instance, but does not work right now because traefik does not support sticking of TCP connections -> https://traefik.io/glossary/what-are-sticky-sessions

    socks5h-tcp:
      loadbalancer:
        servers:
          - address: "gluetun-01:1388"
          #- address: "gluetun-02:1388"   # optional second gluetun instance, but does not work right now because traefik does not support sticking of TCP connections -> https://traefik.io/glossary/what-are-sticky-sessions
          #- address: "gluetun-03:1388"   # optional third gluetun instance, but does not work right now because traefik does not support sticking of TCP connections -> https://traefik.io/glossary/what-are-sticky-sessions

    shadowsocks-tcp:               
      loadBalancer:
        servers:
          - address: "gluetun-01:9388"
          #- address: "gluetun-02:9388"   # optional second gluetun instance, but does not work right now because traefik does not support sticking of TCP connections -> https://traefik.io/glossary/what-are-sticky-sessions
          #- address: "gluetun-03:9388"   # optional third gluetun instance, but does not work right now because traefik does not support sticking of TCP connections -> https://traefik.io/glossary/what-are-sticky-sessions

udp:
  routers:
    socks5h-udp:
       entryPoints: [socks5h-udp]         # :1388
       service: socks5h-udp       

    shadowsocks-udp:
      entryPoints: [shadowsocks-udp]      # :9388
      service: shadowsocks-udp            

  services:
    socks5h-udp:
      loadbalancer:
        servers:
          - address: "gluetun-01:1388"
          #- address: "gluetun-02:1388"   # optional second gluetun instance, but does not work right now because traefik does not support sticking of TCP connections -> https://traefik.io/glossary/what-are-sticky-sessions
          #- address: "gluetun-03:1388"   # optional third gluetun instance, but does not work right now because traefik does not support sticking of TCP connections -> https://traefik.io/glossary/what-are-sticky-sessions

    shadowsocks-udp:                   
      loadBalancer:
        servers:
          - address: "gluetun-01:9388"
          #- address: "gluetun-02:9388"   # optional second gluetun instance, but does not work right now because traefik does not support sticking of TCP connections -> https://traefik.io/glossary/what-are-sticky-sessions
          #- address: "gluetun-03:9388"   # optional third gluetun instance, but does not work right now because traefik does not support sticking of TCP connections -> https://traefik.io/glossary/what-are-sticky-sessions