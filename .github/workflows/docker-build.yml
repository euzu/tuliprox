name: Build and Push Docker Image

on:
  push:
    branches:
      - dev
    tags:
      - 'v*'

jobs:
  build-dev:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            rust_target: x86_64-unknown-linux-musl
            tag: linux-amd64

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push ${{ matrix.platform }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Dockerfile
          target: scratch-final
          push: true
          platforms: ${{ matrix.platform }}
          build-args: |
            RUST_TARGET=${{ matrix.rust_target }}
          tags: ghcr.io/${{ github.repository }}:${{ matrix.tag }}

  build-release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            rust_target: x86_64-unknown-linux-musl
            tag: linux-amd64
          - platform: linux/arm64
            rust_target: aarch64-unknown-linux-musl
            tag: linux-arm64
          - platform: linux/arm/v7
            rust_target: armv7-unknown-linux-musleabihf
            tag: linux-armv7

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push ${{ matrix.platform }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Dockerfile
          target: scratch-final
          push: true
          platforms: ${{ matrix.platform }}
          build-args: |
            RUST_TARGET=${{ matrix.rust_target }}
          tags: ghcr.io/${{ github.repository }}:${{ matrix.tag }}

  build-release-arm:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: buildjet-4vcpu-ubuntu-22.04-arm
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            rust_target: x86_64-unknown-linux-musl
            tag: linux-amd64
          - platform: linux/arm64
            rust_target: aarch64-unknown-linux-musl
            tag: linux-arm64
          - platform: linux/arm/v7
            rust_target: armv7-unknown-linux-musleabihf
            tag: linux-armv7

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push ${{ matrix.platform }} (arm runner)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Dockerfile
          target: scratch-final
          push: true
          platforms: ${{ matrix.platform }}
          build-args: |
            RUST_TARGET=${{ matrix.rust_target }}
          tags: ghcr.io/${{ github.repository }}:${{ matrix.tag }}

  manifest:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-release, build-release-arm]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create and push multi-arch manifest
        run: |
          docker buildx imagetools create -t ghcr.io/${{ github.repository }}:latest \
            ghcr.io/${{ github.repository }}:linux-amd64 \
            ghcr.io/${{ github.repository }}:linux-arm64 \
            ghcr.io/${{ github.repository }}:linux-armv7
